name: Back Merge
description: Merge code back into develop on push to main

inputs:
  src-branch:
    description: 'What branch is acting as the source of the merger'
    required: false
  dest-branch:
    description: 'What branch is acting as the destination of the merger'
    required: false
  commit-message:
    description: 'The commit message to use for the merge'
    required: false
  commit-author-name:
    description: 'The author name to use for the merge'
    required: false
    default: 'github-actions'
  commit-author-email:
    description: 'The email to use for the merge'
    required: false
    default: 'github-actions@github.com'

runs:
  using: 'composite'
  steps:
    - uses: actions/checkout@v2
    - name: Commit Message
      id: message
      run: |
        if [ -n "${{ inputs.commit-message }}" ]; then
          echo "::set-output name=message::$(echo ${{ inputs.commit-message }} | sed 's|\"|\\\"|g')"
        else
          echo "::set-output name=message::Merge branch '${{ inputs.src-branch }}' into '${{ inputs.dest-branch }}'"
        fi
      shell: bash
    - name: Source Branch
      id: src-branch
      run: |
        if [ -n "${{ inputs.src-branch }}" ]; then
          echo "::set-output name=branch::${{ inputs.src-branch }}"
        elif [ "${{ github.event_name }}" = "push" ]; then
          echo "::set-output name=branch::${{ github.ref_name }}"
        else
          echo "::set-output name=branch::main"
        fi
      shell: bash
    - name: Destiation Branch
      id: dest-branch
      run: |
        if [ -n "${{ inputs.dest-branch }}" ]; then
          echo "::set-output name=branch::${{ inputs.dest-branch }}"
        else
          echo "::set-output name=branch::${{ github.event.repository.default_branch }}"
        fi
      shell: bash
    - name: Merge
      run: |
        git config user.email ${{ inputs.commit-author-email }}
        git config user.name ${{ inputs.commit-author-name }}
        git fetch
        git checkout ${{ steps.dest-branch.outputs.branch }}
        git merge ${{ steps.src-branch.outputs.branch }} --strategy-option theirs -m "${{ steps.message.outputs.message }}" --allow-unrelated-histories
        git push -u origin ${{ steps.dest-branch.outputs.branch }}
      shell: bash
